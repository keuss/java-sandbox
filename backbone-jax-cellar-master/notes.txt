____________________________________________________________________
20131128
AUTRES TUTO :
http://resthub.org/index.html
tuto : http://resthub.org/tutorial/spring.html
GitHub : https://github.com/resthub/resthub-spring-tutorial



TUTO du projet backbone-jax-cellar-master (pas de Spring mais avec Jersey) :
http://coenraets.org/blog/2012/01/using-backbone-js-with-a-restful-java-back-end/
GitHub : https://github.com/ccoenraets/backbone-jax-cellar
Eclipse Dynamic Web Project with the source code for both the Java back-end and JavaScript/Backbone.js client

Projet java classic (web module, les lib sont déjà dans WEB-INF/lib)


Test ok avec tomcat 7 eclipse :
http://localhost:8088/cellar/

Mais erreur mysql ...


Création BDD mysql> CREATE DATABASE cellar;
et utilisation du script sql : cellar.sql (test ok avec select * from wine;)

test création vin ok avec création nouveau params bdd et maj. ConnectionHelper 
jdbc.user=root
jdbc.pass=admin


ca marche bien : relire le code du projet, le pesonnaliser ...

____________________________________________________________________
20131202
Ajout de logs + 	jouter des logs js console pour comprendre

____________________________________________________________________
20150507

Création bdd et tables OK
Test KO avec http://localhost:8088/cellar/ =>
WineResource.findAll
Call for WineDAO.findAll() ...
WineResource.findAll() : createStatement ok

Pas d'erreur, mais ResultSet rs = s.executeQuery(sql); semble KO !

Test avec autre driver MySql (mysql-connector-java-5.1.18-bin.jar -> mysql-connector-java-5.1.34.jar comme dans spring batch)
=> Même chose !
=> J'insiste un peu, clean restart le deamon mysql, ça marche (y'a bien le quit dans les logs mysql) c'était visiblement lent !

Test creation / sup / update OK

la servlet jersey est sur /api/*

Jersey (JAX-RS) : Jersey est un framework open-source écrit en langage Java permettant de développer des services web
selon l'architecture REST suivant les spécifications de JAX-RS (JSR 311 et JSR 339)1.

http://localhost:8088/cellar/api/wines
=> Retourne le XML get all

Un vin : http://localhost:8088/cellar/api/wines/10 (pour le xml) ou http://localhost:8088/cellar/#wines/10 (pour la page)
Recherche par nom : http://localhost:8088/cellar/api/wines/search/SERENE

Test que JSON ok :
// exemple : http://localhost:8088/cellar/api/wines
	@GET
	@Produces({ MediaType.APPLICATION_JSON })
	public List<Wine> findAll() {
		System.out.println("WineResource.findAll");
		return dao.findAll();
	}
	
Ajout de log console et explication :


A/ C'est le main.js qui déclenche tout (tpl est une variable global, en js les objets et fonctions sont aussi des variables) :
- Appel à tpl.loadTemplates
	- tpl.loadTemplates(['header', 'wine-details', 'wine-list-item'], function() {});  => cette function à deux arguments : une liste de string et une function : le callback
	- loadTemplate est appelé recursivement pour chargé dans un tableau le résultat html des jQuery.get (html du temple)
	- appel au callback (après 3 boucles) : le deuxième arument de loadTemplates => "app = new AppRouter();" et démarrage de Backbone !

Navigated to http://localhost:8088/cellar/
main.js:60 call loadTemplates ...
utils.js:15 Loading template: header
utils.js:15 Loading template: wine-details
utils.js:15 Loading template: wine-list-item
utils.js:22 call callback ...
main.js:62 call loadTemplates function (callback) ...

B/ header.html

Navigated to http://localhost:8088/cellar/
main.js:60 call loadTemplates ...
utils.js:15 Loading template: header
utils.js:15 Loading template: wine-details
utils.js:15 Loading template: wine-list-item
utils.js:22 call callback ...
main.js:62 call loadTemplates function (callback) ...
header.js:4 initialize HeaderView ...
header.js:9 render HeaderView ...

C/ les reste :

Navigated to http://localhost:8088/cellar/
main.js:60 call loadTemplates ...
utils.js:15 Loading template: header
utils.js:15 Loading template: wine-details
utils.js:15 Loading template: wine-list-item
utils.js:22 call callback ...
main.js:62 call loadTemplates function (callback) ...
header.js:4 initialize HeaderView ...
header.js:10 render HeaderView ...
winelist.js:6 initialize WineListView ...
winelist.js:15 render WineListView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...

avec les données :

call loadTemplates ...
utils.js:15 Loading template: header
utils.js:15 Loading template: wine-details
utils.js:15 Loading template: wine-list-item
utils.js:22 call callback ...
main.js:62 call loadTemplates function (callback) ...
header.js:4 initialize HeaderView ...
header.js:10 render HeaderView ...
winelist.js:6 initialize WineListView ...
winelist.js:15 render WineListView ...
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 11 and name BODEGA LURTON
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 1 and name CHATEAU DE SAINT COSME
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 7 and name CHATEAU LE DOYENNE
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 19 and name dakess
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 8 and name DOMAINE DU BOUSCAT
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 10 and name DOMAINE SERENE
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 20 and name fdfsdfsdfsdffds
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 16 and name fsdf
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 2 and name LAN RIOJA CRIANZA
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 3 and name MARGERUM SYBARITE
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 4 and name OWEN ROE "EX UMBRIS"
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 5 and name REX HILL
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 6 and name VITICCIO CLASSICO RISERVA
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 17 and name vvv
winelist.js:28 initialize WineListItemView ...
winelist.js:35 render WineListItemView ...
winelist.js:39 model id : 18 and name vvv

Test delete

JS :

	deleteWine: function() {
		this.model.destroy({
			success: function() {
				alert('Wine deleted successfully');
				window.history.back();
			}
		});
		return false;
	}
	
Requete :

Remote Address:[::1]:8088
Request URL:http://localhost:8088/cellar/api/wines/15
Request Method:DELETE
Status Code:204 Pas de Contenu
Response Headers
view source
Date:Thu, 07 May 2015 12:51:55 GMT
Server:Apache-Coyote/1.1
Request Headers
view source
Accept:application/json, text/javascript, */*; q=0.01
Accept-Encoding:gzip, deflate, sdch
Accept-Language:fr,en-US;q=0.8,en;q=0.6
Connection:keep-alive
Host:localhost:8088
Origin:http://localhost:8088
Referer:http://localhost:8088/cellar/
User-Agent:Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36
X-Requested-With:XMLHttpRequest

When you call Model.destroy(), Backbone by default sends a DELETE request to your server

Côté back :

	@DELETE @Path("{id}")
	@Produces({ MediaType.APPLICATION_JSON, MediaType.APPLICATION_XML })
	public void remove(@PathParam("id") int id) {
		System.out.println("WineResource.remove wine id: " +id);
		dao.remove(id);
	}


____________________________________________________________________
